/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_PROTO_INFO_MESSAGES_PB_H_INCLUDED
#define PB_PROTO_INFO_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _NotificationType {
    NotificationType_TAKE_MEDICATION = 0,
    NotificationType_MEDICATION_TAKEN = 1,
    NotificationType_DELAY_IN_TAKING_MEDICATION = 2,
    NotificationType_MEDICATION_TAKEN_WITH_DELAY = 3,
    NotificationType_MEDICATION_NOT_TAKEN_INTERVENTION = 4,
    NotificationType_MEDICATION_TAKEN_SIGNIFICANT_DELAY = 5,
    NotificationType_NO_CUP_UNDER_DISPENSER = 6
} NotificationType;

/* Struct definitions */
typedef struct _container {
    int32_t ID;
    int32_t dose;
    int32_t quantity;
    pb_callback_t time;
} container;

typedef struct _schedule {
    pb_callback_t containers;
} schedule;

typedef struct _quantity_message {
    int32_t conatiner_number;
    int32_t quantity_in_dispenser;
} quantity_message;

typedef struct _medication_notification {
    NotificationType notification_id;
} medication_notification;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _NotificationType_MIN NotificationType_TAKE_MEDICATION
#define _NotificationType_MAX NotificationType_NO_CUP_UNDER_DISPENSER
#define _NotificationType_ARRAYSIZE ((NotificationType)(NotificationType_NO_CUP_UNDER_DISPENSER+1))




#define medication_notification_notification_id_ENUMTYPE NotificationType


/* Initializer values for message structs */
#define container_init_default                   {0, 0, 0, {{NULL}, NULL}}
#define schedule_init_default                    {{{NULL}, NULL}}
#define quantity_message_init_default            {0, 0}
#define medication_notification_init_default     {_NotificationType_MIN}
#define container_init_zero                      {0, 0, 0, {{NULL}, NULL}}
#define schedule_init_zero                       {{{NULL}, NULL}}
#define quantity_message_init_zero               {0, 0}
#define medication_notification_init_zero        {_NotificationType_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define container_ID_tag                         1
#define container_dose_tag                       2
#define container_quantity_tag                   3
#define container_time_tag                       4
#define schedule_containers_tag                  1
#define quantity_message_conatiner_number_tag    1
#define quantity_message_quantity_in_dispenser_tag 2
#define medication_notification_notification_id_tag 1

/* Struct field encoding specification for nanopb */
#define container_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    ID,                1) \
X(a, STATIC,   SINGULAR, INT32,    dose,              2) \
X(a, STATIC,   SINGULAR, INT32,    quantity,          3) \
X(a, CALLBACK, REPEATED, INT64,    time,              4)
#define container_CALLBACK pb_default_field_callback
#define container_DEFAULT NULL

#define schedule_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  containers,        1)
#define schedule_CALLBACK pb_default_field_callback
#define schedule_DEFAULT NULL
#define schedule_containers_MSGTYPE container

#define quantity_message_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    conatiner_number,   1) \
X(a, STATIC,   SINGULAR, INT32,    quantity_in_dispenser,   2)
#define quantity_message_CALLBACK NULL
#define quantity_message_DEFAULT NULL

#define medication_notification_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    notification_id,   1)
#define medication_notification_CALLBACK NULL
#define medication_notification_DEFAULT NULL

extern const pb_msgdesc_t container_msg;
extern const pb_msgdesc_t schedule_msg;
extern const pb_msgdesc_t quantity_message_msg;
extern const pb_msgdesc_t medication_notification_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define container_fields &container_msg
#define schedule_fields &schedule_msg
#define quantity_message_fields &quantity_message_msg
#define medication_notification_fields &medication_notification_msg

/* Maximum encoded size of messages (where known) */
/* container_size depends on runtime parameters */
/* schedule_size depends on runtime parameters */
#define PROTO_INFO_MESSAGES_PB_H_MAX_SIZE        quantity_message_size
#define medication_notification_size             2
#define quantity_message_size                    22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
